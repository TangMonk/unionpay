<?php

/*
 * This file is licensed under GPLv2+.
*/

include_once(DRUPAL_ROOT . '/' . drupal_get_path('module', 'unionpay') . '/quickpay_service.php');

/**
 * @file
 * Provides UnionPay interface for drupal.
 */

/**
 * Implementation of hook_help().
 */
function unionpay_help($path, $arg) {
	switch ($path) {
		case 'charge/unionpay':
			$output = '<b>'.t('FAQ on Unionpay').'</b><br/><ul>';
			$output.= '<li>'.t('The preferred payment method is Certificate Payment. If your card is not support via Certificate Payment, plese try Online Banking Payment.').'</li>';
			$output.= '<li>'.t('Any questions, you may call 95516. Or, click <a href="@url" target="_blank">here</a>.',array('@url'=>'http://online.unionpay.com/static/help/index.html')).'</li>';
			$output.='</ul>';
			break;
		default: return;
	}
	return $output;
}

/**
 * Implementation of hook_menu().
 */
function unionpay_menu() {
	$items['admin/config/services/unionpay'] = array(
		'title' => 'Unionpay settings',
		'description' => 'Unionpay merchant settings.',
		'access arguments' => array('access administration pages'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('unionpay_admin_form'),
	);
	$items['charge/unionpay'] = array(
		'access callback' => 'unionpay_access',
		'type' => MENU_CALLBACK,
		'page callback' => 'unionpay_submit_form',
	);
	$items['charge/unionpay/response'] = array(
		'access callback' => 'unionpay_response_access',
		'type' => MENU_CALLBACK,
		'page callback' => 'unionpay_response',
	);
	$items['charge/unionpay/response_back'] = array(
		'access callback' => 'unionpay_response_access',
		'type' => MENU_CALLBACK,
		'page callback' => 'unionpay_response',
	);
	return $items;
}

function unionpay_admin_form($form, $form_state) {
	$form=array(
		'#submit' => array('unionpay_admin_form_submit'),
	);
	$form['security_key'] = array(
		'#type' => 'textfield',
		'#title' => t('Security Key (@code)',array('@code'=>'security_key')),
		'#default_value' => variable_get('unionpay_security_key', quickpay_conf::$security_key),
		'#required' => TRUE,
	);
	$form['merid'] = array(
		'#type' => 'textfield',
		'#title' => t('Merchant ID (@code)',array('@code'=>'merId')),
		'#default_value' => variable_get('unionpay_merid', quickpay_conf::$pay_params['merId']),
		'#required' => TRUE,
	);
	$form['acqcode'] = array(
		'#type' => 'textfield',
		'#title' => t('Acquirer BIN (@code)',array('@code'=>'acqCode')),
		'#default_value' => variable_get('unionpay_acqcode', quickpay_conf::$pay_params['acqCode']),
		'#required' => FALSE,
	);
	$form['mercode'] = array(
		'#type' => 'textfield',
		'#title' => t('Merchat Code (@code)',array('@code'=>'merCode')),
		'#default_value' => variable_get('unionpay_mercode', quickpay_conf::$pay_params['merCode']),
		'#required' => FALSE,
	);
	$form['merabbr'] = array(
		'#type' => 'textfield',
		'#title' => t('Merchant Name (@code)',array('@code'=>'merAbbr')),
		'#default_value' => variable_get('unionpay_merabbr', quickpay_conf::$pay_params['merAbbr']),
		'#required' => TRUE,
	);
	return system_settings_form($form);
}

function unionpay_admin_form_submit($form, $form_state) {
	$settings=array(
		'security_key', 'merid', 'acqcode', 'mercode', 'merabbr'
	);
	foreach($settings as $s) {
		variable_set('unionpay_'.$s,$form_state['values'][$s]);
	}
}

function unionpay_access() {
	if($_SERVER['REQUEST_METHOD']!=='POST') {
		return false;
	}
	return true;
}

function unionpay_response_access() {
	if($_SERVER['REQUEST_METHOD']!=='POST') {
		return false;
	}
	$response = new quickpay_service($_POST, quickpay_conf::RESPONSE);
	if ($response->get('respCode') != quickpay_service::RESP_SUCCESS) {
		watchdog('unionpay',
			'Got Error @errcode => @errstr when receiving post result.', array(
				'@errcode' => $response->get('respCode'),
				'@errstr' => $response->get('respMsg'),
			WATCHDOG_ERROR
		));
	}
	unset($response);
	return true;
}

function unionpay_paymentgatewayinfo() {
	return array(
		'unionpay' => drupal_get_path('module', 'unionpay').'/unionpay.jpg',
	);
}

function unionpay_submit_form($form, $form_state) {
	return;
}

function unionpay_submit_form_submit($form, $form_state) {
	$param=array();

	$param['merId']                 = variable_get('unionpay_merid', quickpay_conf::$pay_params['merId']);  // 商户ID
	$param['acqCode']               = variable_get('unionpay_acqcode', quickpay_conf::$pay_params['acqCode']);  //收单机构代码
	$param['merCode']               = variable_get('unionpay_mercode', quickpay_conf::$pay_params['merCode']);  //商户代码
	$param['merAbbr']               = variable_get('unionpay_merabbr', quickpay_conf::$pay_params['merAbbr']);  //商户名称

	$param['transType']             = quickpay_conf::CONSUME;  //交易类型，CONSUME or PRE_AUTH

	$param['orderAmount']           = $form_state['values']['amount']*100;        //交易金额
	$param['orderNumber']           = $form_state['values']['orderno']; //订单号，必须唯一
	$param['commodityName']         = $form_state['values']['ordertitle']; //订单号，必须唯一
	$param['orderTime']             = date('YmdHis', $form_state['values']['ordertime']);   //交易时间, YYYYmmhhddHHMMSS
	$param['orderCurrency']         = quickpay_conf::CURRENCY_CNY;  //交易币种，CURRENCY_CNY=>人民币

	$param['customerIp']            = $_SERVER['REMOTE_ADDR'];  //用户IP
	$param['frontEndUrl']           = $GLOBALS['base_url'].'/charge/unionpay/response';    //前台回调URL
	$param['backEndUrl']            = $GLOBALS['base_url'].'/charge/unionpay/response_back';    //后台回调URL
	
	$pay_service = new quickpay_service($param, quickpay_conf::FRONT_PAY);
	$html = $pay_service->create_html();
	
	return $html;
}

function unionpay_response() {
	module_invoke_all('gatewayreponse',$_POST['orderNumber'], $_POST['qid'], 'unionpay', arg(2)=='response_back');
}

function unionpay_querystatus($orderno, $ordertime) {
	$param['transType']     = quickpay_conf::CONSUME;   //交易类型
	$param['orderNumber']   = $orderno; //订单号
	$param['orderTime']     = date('YmdHis', $ordertime);   //订单时间

	//提交查询
	$query  = new quickpay_service($param, quickpay_conf::QUERY);
	$ret    = $query->post();

	//返回查询结果
	$response = new quickpay_service($ret, quickpay_conf::RESPONSE);
	
	//后续处理
	$arr_ret = $response->get_args();

	$respCode = $response->get('respCode');
	$queryResult = $response->get('queryResult');
	
	switch($queryResult) {
		case quickpay_service::QUERY_FAIL:
		case quickpay_service::QUERY_INVALID:
			return FALSE;
		case quickpay_service::RESP_SUCCESS:
			if($queryResult == quickpay_service::QUERY_WAIT) return FALSE;
			if($queryResult == quickpay_service::QUERY_SUCCESS) return $response->get('qid');
	}
	return FALSE;
}
?>
